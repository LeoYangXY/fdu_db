# Generated by Django 4.2.21 on 2025-05-30 04:57

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Administrator",
            fields=[
                (
                    "administrator_id",
                    models.CharField(max_length=20, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=50)),
                ("department", models.CharField(max_length=50)),
                ("contact", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "account",
                    models.CharField(max_length=50, unique=True, verbose_name="账号"),
                ),
                ("password", models.CharField(max_length=128, verbose_name="密码")),
            ],
            options={
                "verbose_name": "管理员",
                "verbose_name_plural": "管理员",
            },
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "course_code",
                    models.CharField(max_length=20, primary_key=True, serialize=False),
                ),
                ("course_name", models.CharField(max_length=100)),
                ("department", models.CharField(max_length=50)),
                ("course_time", models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                "verbose_name": "课程",
                "verbose_name_plural": "课程",
            },
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "student_id",
                    models.CharField(max_length=20, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=50)),
                ("department", models.CharField(max_length=50)),
                ("major", models.CharField(max_length=50)),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female")], max_length=1
                    ),
                ),
                (
                    "wechat_openid",
                    models.CharField(blank=True, max_length=50, null=True, unique=True),
                ),
                (
                    "account",
                    models.CharField(max_length=50, unique=True, verbose_name="账号"),
                ),
                ("password", models.CharField(max_length=128, verbose_name="密码")),
            ],
            options={
                "verbose_name": "学生",
                "verbose_name_plural": "学生",
            },
        ),
        migrations.CreateModel(
            name="Teacher",
            fields=[
                (
                    "teacher_id",
                    models.CharField(max_length=20, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=50)),
                ("department", models.CharField(max_length=50)),
                ("contact", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "account",
                    models.CharField(max_length=50, unique=True, verbose_name="账号"),
                ),
                ("password", models.CharField(max_length=128, verbose_name="密码")),
            ],
            options={
                "verbose_name": "教师",
                "verbose_name_plural": "教师",
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "notification_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("content", models.TextField()),
                ("send_time", models.DateTimeField(auto_now_add=True)),
                (
                    "receiver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_notifications",
                        to="core.student",
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_notifications",
                        to="core.teacher",
                    ),
                ),
            ],
            options={
                "verbose_name": "通知",
                "verbose_name_plural": "通知",
            },
        ),
        migrations.CreateModel(
            name="LeaveRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("leave_id", models.CharField(max_length=30, unique=True)),
                ("leave_date", models.DateField()),
                ("leave_reason", models.TextField(blank=True, null=True)),
                (
                    "leave_status",
                    models.CharField(
                        choices=[
                            ("approved", "Approved"),
                            ("pending", "Pending"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        max_length=10,
                    ),
                ),
                ("apply_date", models.DateTimeField(auto_now_add=True)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.course"
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.student"
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.teacher"
                    ),
                ),
            ],
            options={
                "verbose_name": "请假申请",
                "verbose_name_plural": "请假申请",
            },
        ),
        migrations.CreateModel(
            name="Enrollment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("enrollment_time", models.DateTimeField(auto_now_add=True)),
                ("semester", models.CharField(max_length=20)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.course"
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.student"
                    ),
                ),
            ],
            options={
                "verbose_name": "选课记录",
                "verbose_name_plural": "选课记录",
            },
        ),
        migrations.AddField(
            model_name="course",
            name="teacher",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="core.teacher"
            ),
        ),
        migrations.CreateModel(
            name="Attendance",
            fields=[
                (
                    "record_id",
                    models.AutoField(
                        db_column="record_id", primary_key=True, serialize=False
                    ),
                ),
                ("date", models.DateField(verbose_name="考勤日期")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("present", "出席"),
                            ("absent", "缺席"),
                            ("approved_leave", "已批准请假"),
                        ],
                        default="absent",
                        max_length=20,
                        verbose_name="考勤状态",
                    ),
                ),
                (
                    "scan_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="签到时间"
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT, to="core.course"
                    ),
                ),
                (
                    "leave_request",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.leaverequest",
                        verbose_name="关联请假申请",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT, to="core.student"
                    ),
                ),
            ],
            options={
                "verbose_name": "考勤记录",
                "verbose_name_plural": "考勤记录",
            },
        ),
        migrations.AddConstraint(
            model_name="enrollment",
            constraint=models.UniqueConstraint(
                fields=("student", "course", "semester"),
                name="uk_student_course_semester",
            ),
        ),
        migrations.AddIndex(
            model_name="attendance",
            index=models.Index(
                fields=["student", "course", "date"], name="idx_student_course_date"
            ),
        ),
        migrations.AddConstraint(
            model_name="attendance",
            constraint=models.UniqueConstraint(
                fields=("student", "course", "date"), name="unique_student_course_date"
            ),
        ),
    ]
